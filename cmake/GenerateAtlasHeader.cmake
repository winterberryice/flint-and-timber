# This script is executed by `cmake -P` from a custom command.
# It receives ATLAS_INPUT_FILE and ATLAS_OUTPUT_FILE as -D definitions.

if(NOT ATLAS_INPUT_FILE)
    message(FATAL_ERROR "ATLAS_INPUT_FILE not defined.")
endif()

if(NOT ATLAS_OUTPUT_FILE)
    message(FATAL_ERROR "ATLAS_OUTPUT_FILE not defined.")
endif()

# Read the binary file into a hex string
file(READ "${ATLAS_INPUT_FILE}" ATLAS_HEX HEX)

# Format the hex string into a C-style initializer list (0xDE, 0xAD, ...)
string(REGEX REPLACE "(..)" "0x\\1," ATLAS_FORMATTED ${ATLAS_HEX})

# Remove the trailing comma from the last element
string(SUBSTRING "${ATLAS_FORMATTED}" 0 -1 ATLAS_FORMATTED)

# Use a fixed variable name to match the C++ code
set(VAR_NAME "assets_textures_block_atlas_png")

# Create the content for the header file
set(HEADER_CONTENT "/* This file is auto-generated by CMake. DO NOT EDIT. */\n\n")
string(APPEND HEADER_CONTENT "#pragma once\n\n")
string(APPEND HEADER_CONTENT "static const unsigned char ${VAR_NAME}[] = {\n    ")
string(APPEND HEADER_CONTENT "${ATLAS_FORMATTED}")
string(APPEND HEADER_CONTENT "\n};\n")
string(APPEND HEADER_CONTENT "static const unsigned int ${VAR_NAME}_len = sizeof(${VAR_NAME});\n")

# Write the formatted content to the output file
file(WRITE "${ATLAS_OUTPUT_FILE}" "${HEADER_CONTENT}")

message(STATUS "Generated C++ header from ${ATLAS_INPUT_FILE} -> ${ATLAS_OUTPUT_FILE}")
