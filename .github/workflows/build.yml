name: C++ CI

on:
  push:
  pull_request:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Cache build directory
      uses: actions/cache@v4
      id: cache-build
      with:
        path: build
        key: ${{ runner.os }}-release-build-${{ hashFiles('**/CMakeLists.txt', 'CMakePresets.json', '**/*.c', '**/*.h', '**/*.cpp') }}
        restore-keys: |
          ${{ runner.os }}-release-build-

    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          build-essential \
          git \
          make \
          pkg-config \
          cmake \
          ninja-build \
          gnome-desktop-testing \
          libasound2-dev \
          libpulse-dev \
          libaudio-dev \
          libjack-dev \
          libsndio-dev \
          libx11-dev \
          libxext-dev \
          libxrandr-dev \
          libxcursor-dev \
          libxfixes-dev \
          libxi-dev \
          libxss-dev \
          libxtst-dev \
          libxkbcommon-dev \
          libdrm-dev \
          libgbm-dev \
          libgl1-mesa-dev \
          libgles2-mesa-dev \
          libegl1-mesa-dev \
          libdbus-1-dev \
          libibus-1.0-dev \
          libudev-dev \
          libpipewire-0.3-dev \
          libwayland-dev \
          libdecor-0-dev \
          liburing-dev \
          libxinerama-dev

    - name: Configure CMake
      if: steps.cache-build.outputs.cache-hit != 'true'
      run: cmake --preset release

    - name: Build
      run: cmake --build --preset release

    - name: Upload Executable Artifact
      uses: actions/upload-artifact@v4
      with:
        name: flint-and-timber-Linux
        path: build/release/flint-and-timber
